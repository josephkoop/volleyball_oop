<%- include('components/header') %>

<main class="container teams-page">
    <!-- Teams Header Section -->
    <section class="teams-header">
        <div class="breadcrumb-nav">
            <a href="/home" class="breadcrumb-link">Home</a>
            <span class="breadcrumb-separator">/</span>
            <span class="breadcrumb-current">Teams</span>
        </div>

        <div class="action-buttons">
            <button class="btn btn-secondary" onclick="window.location.href='/home'">
                <i class="fas fa-arrow-left"></i> Back
            </button>

            <% if (user) { %>
                <button id="addTeamButton" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Add Team
                </button>
            <% } %>
        </div>
    </section>

    <!-- Teams List Section -->
    <section class="teams-section">
        <h2 class="section-title">
            <i class="fas fa-users"></i> Belize Volleyball Teams
            <% if (teams) { %>
                <span class="badge"><%= teams.length %></span>
            <% } %>
        </h2>

        <div class="teams-table">
            <div class="table-header">
                <div class="table-cell">Rank</div>
                <div class="table-cell">Name</div>
                <div class="table-cell">Location</div>
                <% if (user) { %>
                    <div class="table-cell actions">Actions</div>
                <% }else{ %>
                    <div class="table-cell"></div>
                <% } %>
            </div>

            <% if (teams && teams.length > 0) { %>
                <% teams.forEach(team => { %>
                    <a href="/teams/<%= team.id %>/players" class="table-row" data-team-id="<%= team.id %>">
                        <div class="table-cell"><%= team.rank %></div>
                        <div class="table-cell"><%= team.name %></div>
                        <div class="table-cell"><%= team.location %></div>
                        <% if (user) { %>
                            <div class="table-cell actions">
                                <button class="btn-icon btn-edit" data-team-id="<%= team.id %>" data-team-name="<%= team.name %>" data-team-rank="<%= team.rank %>" data-team-location="<%= team.location %>">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn-icon btn-danger" data-team-id="<%= team.id %>" data-team-name="<%= team.name %>">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        <% }else{ %>
                            <div class="table-cell actions"></div>
                        <% } %>
                    </a>
                <% }) %>
            <% } else { %>
                <div class="empty-state">
                    <i class="fas fa-volleyball-ball"></i>
                    <h3>No Teams Yet</h3>
                    <p>There are no official teams registered yet.</p>
                    <% if (user) { %>
                        <button id="addFirstTeamButton" class="btn btn-primary">
                            <i class="fas fa-plus"></i> Add First Team
                        </button>
                    <% } %>
                </div>
            <% } %>
        </div>
    </section>
</main>

<!-- Add Team Modal -->
<div id="addTeamModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Add New Team</h3>
            <button class="modal-close">&times;</button>
        </div>
        <form id="addTeamForm">
            <div class="form-group">
                <label for="teamName">Name</label>
                <input type="text" name="name" id="teamName" required>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="teamRank">Rank</label>
                    <input type="number" name="rank" id="teamRank" min="1" required>
                </div>
                <div class="form-group">
                    <label for="teamLocation">Location</label>
                    <input type="text" name="location" id="teamLocation" required>
                </div>
            </div>

            <div class="form-actions">
                <button type="button" class="btn btn-secondary" id="cancelAddTeam">Cancel</button>
                <button type="submit" class="btn btn-primary">Add Team</button>
            </div>
        </form>
    </div>
</div>

<!-- Edit Team Modal -->
<div id="editTeamModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Edit Team</h3>
            <button class="modal-close">&times;</button>
        </div>
        <form id="editTeamForm">
            <input type="hidden" name="id" id="editTeamId">

            <div class="form-group">
                <label for="editTeamName">Name</label>
                <input type="text" name="name" id="editTeamName" required>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="editTeamRank">Rank</label>
                    <input type="number" name="rank" id="editTeamRank" min="1" required>
                </div>
                <div class="form-group">
                    <label for="editTeamLocation">Location</label>
                    <input type="text" name="location" id="editTeamLocation" required>
                </div>
            </div>

            <div class="form-actions">
                <button type="button" class="btn btn-secondary" id="cancelEditTeam">Cancel</button>
                <button type="submit" class="btn btn-primary">Update Team</button>
            </div>
        </form>
    </div>
</div>

<!-- Delete Team Modal -->
<div id="deleteTeamModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Delete Team</h3>
            <button class="modal-close">&times;</button>
        </div>
        <form id="deleteTeamForm">
            <input type="hidden" name="id" id="deleteTeamId">

            <div class="modal-body">
                <div class="warning-message">
                    <i class="fas fa-exclamation-triangle"></i>
                    <p>Are you sure you want to delete <strong id="deleteTeamName"></strong>? This action cannot be undone.</p>
                </div>
            </div>

            <div class="form-actions">
                <button type="button" class="btn btn-secondary" id="cancelDeleteTeam">Cancel</button>
                <button type="submit" class="btn btn-danger">Delete Team</button>
            </div>
        </form>
    </div>
</div>

    
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // DOM Elements
        const addTeamButton = document.getElementById('addTeamButton');
        const addFirstTeamButton = document.getElementById('addFirstTeamButton');
        const editTeamButtons = document.querySelectorAll('.btn-edit');
        const deleteTeamButtons = document.querySelectorAll('.btn-danger');
        const modalCloseButtons = document.querySelectorAll('.modal-close');
        const cancelAddTeam = document.getElementById('cancelAddTeam');
        const cancelEditTeam = document.getElementById('cancelEditTeam');
        const cancelDeleteTeam = document.getElementById('cancelDeleteTeam');
        const addTeamForm = document.getElementById('addTeamForm');
        const editTeamForm = document.getElementById('editTeamForm');
        const deleteTeamForm = document.getElementById('deleteTeamForm');
        const modals = document.querySelectorAll('.modal');

        // Event Listeners
        if (addTeamButton) {
            addTeamButton.addEventListener('click', openAddModal);
        }

        if (addFirstTeamButton) {
            addFirstTeamButton.addEventListener('click', openAddModal);
        }

        editTeamButtons.forEach(button => {
            button.addEventListener('click', function() {
                const teamId = this.getAttribute('data-team-id');
                const teamName = this.getAttribute('data-team-name');
                const teamRank = this.getAttribute('data-team-rank');
                const teamLocation = this.getAttribute('data-team-location');
                openEditModal(teamId, teamName, teamRank, teamLocation);
            });
        });

        deleteTeamButtons.forEach(button => {
            button.addEventListener('click', function() {
                const teamId = this.getAttribute('data-team-id');
                const teamName = this.getAttribute('data-team-name');
                openDeleteModal(teamId, teamName);
            });
        });

        modalCloseButtons.forEach(button => {
            button.addEventListener('click', closeModal);
        });

        if (cancelAddTeam) {
            cancelAddTeam.addEventListener('click', closeModal);
        }

        if (cancelEditTeam) {
            cancelEditTeam.addEventListener('click', closeModal);
        }

        if (cancelDeleteTeam) {
            cancelDeleteTeam.addEventListener('click', closeModal);
        }

        addTeamForm.addEventListener('submit', handleAddTeamSubmit);
        editTeamForm.addEventListener('submit', handleEditTeamSubmit);
        deleteTeamForm.addEventListener('submit', handleDeleteTeamSubmit);

        // Close modal when clicking outside
        modals.forEach(modal => {
            modal.addEventListener('click', function(e) {
                if (e.target === this) {
                    closeModal();
                }
            });
        });

        // Functions
        function openAddModal() {
            document.getElementById('addTeamModal').classList.add('show');
        }

        function openEditModal(id, name, rank, location) {
            document.getElementById('editTeamId').value = id;
            document.getElementById('editTeamName').value = name;
            document.getElementById('editTeamRank').value = rank;
            document.getElementById('editTeamLocation').value = location;
            document.getElementById('editTeamModal').classList.add('show');
        }

        function openDeleteModal(id, name) {
            document.getElementById('deleteTeamId').value = id;
            document.getElementById('deleteTeamName').textContent = name;
            document.getElementById('deleteTeamModal').classList.add('show');
        }

        function closeModal() {
            document.querySelectorAll('.modal').forEach(modal => {
                modal.classList.remove('show');
            });
        }

        async function handleAddTeamSubmit(e) {
            e.preventDefault();
            const form = e.target;
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            try {
                const response = await fetch('/teams/add', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    window.location.reload();
                } else {
                    const error = await response.json();
                    alert(error.message || 'Failed to add team');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while adding the team');
            }
        }

        async function handleEditTeamSubmit(e) {
            e.preventDefault();
            const form = e.target;
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            try {
                const response = await fetch('/teams/edit', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    window.location.reload();
                } else {
                    const error = await response.json();
                    alert(error.message || 'Failed to update team');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while updating the team');
            }
        }

        async function handleDeleteTeamSubmit(e) {
            e.preventDefault();
            const form = e.target;
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            try {
                const response = await fetch('/teams/delete', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    window.location.reload();
                } else {
                    const error = await response.json();
                    alert(error.message || 'Failed to delete team');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while deleting the team');
            }
        }
    });
</script>
    

<%- include('components/footer') %>