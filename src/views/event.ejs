<%- include('components/header') %>

<main class="container tournament-page">
    <!-- Tournament Header Section -->
    <section class="tournament-header">
        <div class="breadcrumb-nav">
            <a href="/tournaments" class="breadcrumb-link">Tournaments</a>
            <span class="breadcrumb-separator">/</span>
            <span class="breadcrumb-current"><%= tournament.name %></span>
        </div>

        <div class="action-buttons">
            <button class="btn btn-secondary" onclick="window.location.href='/tournaments'">
                <i class="fas fa-arrow-left"></i> Back
            </button>

            <% if (user) { %>
                <button onclick="openEditModal(event)" class="btn btn-primary">
                    <i class="fas fa-edit"></i> Edit
                </button>
                <button onclick="openDeleteModal(event)" class="btn btn-danger">
                    <i class="fas fa-trash"></i> Delete
                </button>
                <% if (tournament.status == 'Future'){ %>
                    <button onclick="openStartModal(event)" class="btn btn-primary">
                        <i class="fas fa-play"></i> Start
                    </button>
                <% } else if(tournament.status == 'Ongoing'){ %>
                    <button onclick="openFinishModal(event)" class="btn btn-primary">
                        <i class="fas fa-flag-checkered"></i> Finish
                    </button>
                <% } %>
            <% } %>
        </div>
    </section>

    <!-- Main Tournament Card -->
    <section class="tournament-card-section">
        <div class="welcome-section">
            <h1><%= tournament.name %></h1>
            <div class="tournament-details">
                <p><i class="fas fa-map-marker-alt"></i> <%= tournament.venue %></p>
                <p><i class="fas fa-calendar-alt"></i> <%= new Date(tournament.start_date).toLocaleDateString() %> - <%= new Date(tournament.end_date).toLocaleDateString() %></p>
                <p><i class="fas fa-user-tie"></i> <%= tournament.organizer %></p>
                <p><i class="fas fa-phone"></i> <%= tournament.contact %></p>
                <p class="tournament-description"><%= tournament.description %></p>
                <div class="tournament-status <%= tournament.status.toLowerCase() %>">
                    Status: <%= tournament.status %>
                </div>
            </div>
        </div>
    </section>

    <!-- Participants Section -->
    <% if(tournament.status == 'Ongoing'){ %>
        <section class="participants-section">
            <h2 class="section-title">
                <i class="fas fa-users"></i> Participants
                <span class="badge"><%= participants.length %></span>
            </h2>
            <div class="participants-grid">
                <% participants.forEach(par => { %>
                    <div class="participant-card">
                        <div class="participant-avatar">
                            <i class="fas fa-user"></i>
                        </div>
                        <div class="participant-name"><%= par.name %></div>
                    </div>
                <% }) %>
            </div>
        </section>
    <% } %>

    <!-- Rounds Management Section -->
    <section class="rounds-section">
        <div class="section-header">
            <h2 class="section-title">
                <i class="fas fa-list-ol"></i> Tournament Rounds
                <span class="badge"><%= tournament.rounds ? tournament.rounds.length : 0 %></span>
            </h2>
            
            <% if ((user) && tournament.status == 'Ongoing') { %>
                <div class="rounds-actions">
                    <button onclick="openAddRoundModal(event)" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Add Round
                    </button>
                    <button onclick="saveAllRounds()" class="btn btn-secondary">
                        <i class="fas fa-save"></i> Save All
                    </button>
                </div>
            <% } %>
        </div>

        <div class="rounds-container">
            <% if (tournament.rounds && tournament.rounds.length > 0) { %>
                <% tournament.rounds.forEach((round, index) => { %>
                    <div class="round-card welcome-section">
                        <%- include('components/round-card', { round: round, tournament: tournament, participants: participants, index: index}) %>
                    </div>
                <% }) %>
            <% } else { %>
                <div class="empty-state">
                    <i class="fas fa-volleyball-ball"></i>
                    <h3>No Rounds Yet</h3>
                    <p>This tournament doesn't have any rounds scheduled yet.</p>
                    <% if ((user) && tournament.status == 'Ongoing') { %>
                        <button onclick="openAddRoundModal(event)" class="btn btn-primary">
                            Add Round
                        </button>
                    <% } %>
                </div>
            <% } %>
        </div>
    </section>
</main>

<!-- Edit Tournament Modal -->
<div id="editTournamentModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Edit Tournament</h3>
            <button class="modal-close" onclick="closeModal()">&times;</button>
        </div>
        <form id="editTournamentForm" method="POST">
            <input type="hidden" name="id" id="editTournamentId"/>

            <div class="form-group">
                <label for="editTournamentName">Name</label>
                <input type="text" name="name" id="editTournamentName" required/>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="editTournamentVenue">Venue</label>
                    <input type="text" name="venue" id="editTournamentVenue" required/>
                </div>
                <div class="form-group">
                    <label for="editTournamentOrganizer">Organizer</label>
                    <input type="text" name="organizer" id="editTournamentOrganizer" required/>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="editTournamentStartDate">Start Date</label>
                    <input type="date" name="start_date" id="editTournamentStartDate" required/>           
                </div>
                <div class="form-group">
                    <label for="editTournamentEndDate">End Date</label>
                    <input type="date" name="end_date" id="editTournamentEndDate" required/>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="editTournamentContact">Contact Number</label>
                    <input type="tel" name="contact" id="editTournamentContact" required/>
                </div>
            </div>

            <div class="form-group">
                <label for="editTournamentDescription">Description</label>
                <textarea name="description" id="editTournamentDescription" rows="4"></textarea>
            </div>

            <div class="form-actions">
                <button type="button" class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                <button type="submit" class="btn btn-primary">Update Tournament</button>
            </div>
        </form>
    </div>
</div>

<!-- Delete Tournament Modal -->
<div id="deleteTournamentModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Delete Tournament</h3>
            <button class="modal-close" onclick="closeModal()">&times;</button>
        </div>
        <form id="deleteTournamentForm" method="POST">
            <input type="hidden" name="id" id="deleteTournamentId"/>

            <div class="modal-body">
                <div class="warning-message">
                    <i class="fas fa-exclamation-triangle"></i>
                    <p>Are you sure you want to delete <strong><%= tournament.name %></strong>? This action cannot be undone.</p>
                </div>
            </div>

            <div class="form-actions">
                <button type="button" class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                <button type="submit" class="btn btn-danger">Delete Tournament</button>
            </div>
        </form>
    </div>
</div>

<!-- Start Tournament Modal -->
<div id="startTournamentModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Start Tournament</h3>
            <button class="modal-close" onclick="closeModal()">&times;</button>
        </div>
        <form id="startTournamentForm" method="POST">
            <input type="hidden" name="id" id="startTournamentId"/>

            <div class="modal-body">
                <p>Select the teams competing in <strong><%= tournament.name %></strong>:</p>
                
                <div class="teams-selection">
                    <% teams.forEach(team => { %>
                        <label class="team-checkbox">
                            <input type="checkbox" name="teams" value="<%= team.id %>">
                            <span class="checkmark"></span>
                            <span class="team-name"><%= team.name %></span>
                        </label>
                    <% }); %>
                </div>
            </div>

            <div class="form-actions">
                <button type="button" class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                <button type="submit" class="btn btn-primary">Start Tournament</button>
            </div>
        </form>
    </div>
</div>

<!-- Add Round Modal -->
<div id="addRoundModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Add New Round</h3>
            <button class="modal-close" onclick="closeModal()">&times;</button>
        </div>
        <form id="addRoundForm" method="POST">
            <div class="form-group">
                <label for="roundName">Round Name</label>
                <input type="text" name="name" id="roundName" placeholder="e.g., Quarter Finals" required>
            </div>

            <div class="form-group">
                <label for="gameAmount">Number of Games</label>
                <input type="number" name="amount" id="gameAmount" min="1" value="1" required>
            </div>

            <div class="form-actions">
                <button type="button" class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                <button type="submit" class="btn btn-primary">Add Round</button>
            </div>
        </form>
    </div>
</div>

<!-- Finish Tournament Modal -->
<div id="finishTournamentModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Finish Tournament</h3>
            <button class="modal-close" onclick="closeModal()">&times;</button>
        </div>
        <form id="finishTournamentForm" method="POST">
            <input type="hidden" name="id" id="finishTournamentId"/>

            <div class="modal-body">
                <div class="confirmation-message">
                    <i class="fas fa-check-circle"></i>
                    <p>You are about to finish <strong><%= tournament.name %></strong>. Please verify all results are correct as you won't be able to make changes after submission.</p>
                </div>
            </div>

            <div class="form-actions">
                <button type="button" class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                <button type="submit" class="btn btn-primary">Finish Tournament</button>
            </div>
        </form>
    </div>
</div>


<script>
    let tournament = <%- JSON.stringify(tournament) %>;


    function openDeleteModal(){
        document.getElementById("deleteTournamentId").value = tournament.id;

        let message = document.querySelector("#deleteTournamentModal p");
        message.textContent = `Are you sure you want to delete tournament ${tournament.name}?`;

        document.getElementById("deleteTournamentModal").classList.add("show");
    }


    function openStartModal(){
        document.getElementById("startTournamentId").value = tournament.id;
        document.getElementById("startTournamentModal").classList.add("show");
    }


    function openAddRoundModal(){
        document.getElementById("addRoundModal").classList.add("show");
    }


    function openFinishModal(){
        document.getElementById("finishTournamentId").value = tournament.id;
        document.getElementById("finishTournamentModal").classList.add("show");
    }


    function openEditModal(){
        document.getElementById("editTournamentId").value = tournament.id;
        document.getElementById("editTournamentName").value = tournament.name;
        document.getElementById("editTournamentVenue").value = tournament.venue;

        let startDate = tournament.start_date.split('T')[0];
        let endDate = tournament.end_date.split('T')[0];

        document.getElementById("editTournamentStartDate").value = startDate;
        document.getElementById("editTournamentEndDate").value = endDate;
        document.getElementById("editTournamentOrganizer").value = tournament.organizer;
        document.getElementById("editTournamentContact").value = tournament.contact;
        document.getElementById("editTournamentDescription").value = tournament.description;

        document.getElementById("editTournamentModal").classList.add("show");
    }


    function closeModal(){
        document.getElementById("editTournamentModal").classList.remove("show");
        document.getElementById("deleteTournamentModal").classList.remove("show");
        document.getElementById("startTournamentModal").classList.remove("show");
        document.getElementById("addRoundModal").classList.remove("show");
        document.getElementById("finishTournamentModal").classList.remove("show");
    }



    document.addEventListener("click", function(event) {
        if (event.target.tagName === "BUTTON" || event.target.closest("button")) {
            return;
        }

        let modals = ['editTournamentModal', 'deleteTournamentModal', 'startTournamentModal', 'addRoundModal', 'finishTournamentModal'];
        modals.forEach(modalId => {
            let modal = document.getElementById(modalId);
            let modalContent = document.querySelector(`#${modalId} .modal-content`);
            if (modal.classList.contains("show") && 
                !modalContent.contains(event.target) && 
                !event.target.classList.contains('modal-close') && 
                !event.target.closest('.modal-close')) {
                closeModalP();
            }
        });
    });
</script>

<script>
    document.getElementById('editTournamentForm').addEventListener('submit', async function(e) {
        e.preventDefault();

        const formData = new FormData(e.target);
        const data1 = Object.fromEntries(formData.entries());
    
        try {
            const res = await fetch('/tournaments/edit', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id: data1.id, name: data1.name, venue: data1.venue, start_date: data1.start_date, end_date: data1.end_date, organizer: data1.organizer, contact: data1.contact, description: data1.description })
            });
    
            const data = await res.json();
    
            if (!res.ok) {
                alert(data.errors?.map(e => e.msg).join('\n') || data.error);
            } else {
                closeModal();
                window.location.reload();
                alert("Tournament updated succesfully.");
            }
        } catch (err) {
            console.error(err);
            alert('Something went wrong.');
        }
    });
    
    
    document.getElementById('deleteTournamentForm').addEventListener('submit', async function(e) {
        e.preventDefault();
    
        const id = document.getElementById("deleteTournamentId").value;
    
        try {
            const res = await fetch('/tournaments/delete', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id })
            });
    
            const data = await res.json();
    
            if (!res.ok) {
                alert(data.error);
            } else {
                closeModal();
                alert("Tournament deleted succesfully.");
                window.location.href = '/tournaments';
            }
        } catch (err) {
            console.error(err);
            alert('Something went wrong.');
        }
    });
    
    
    document.getElementById('startTournamentForm').addEventListener('submit', async function(e) {
        e.preventDefault();

        const formData = new FormData(e.target);

        const id = formData.get('id');
        const teams = formData.getAll('teams');
    
        try {
            const res = await fetch('/tournaments/start', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id, teams })
            });
    
            const data = await res.json();
    
            if (!res.ok) {
                alert(data.error);
            } else {
                closeModal();
                window.location.reload();
                alert("Tournament started succesfully.");
            }
        } catch (err) {
            console.error(err);
            alert('Something went wrong.');
        }
    });
    
    
    document.getElementById('addRoundForm').addEventListener('submit', async function(e) {
        e.preventDefault();

        const formData = new FormData(e.target);

        const name = formData.get('name');
        const amount = formData.get('amount');
        const id = tournament.id;
    
        try {
            const res = await fetch('/tournaments/rounds/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id, name, amount })
            });
    
            const data = await res.json();
    
            if (!res.ok) {
                alert(data.error);
            } else {
                closeModal();
                window.location.reload();
                alert("Round added succesfully.");
            }
        } catch (err) {
            console.error(err);
            alert('Something went wrong.');
        }
    });

    function saveAllRounds(){
        document.querySelectorAll('.game-form').forEach(form => {
            form.dispatchEvent(new Event('submit', { cancelable: true, bubbles: true }));
        });
    }
    
    async function deleteRound(event){
    
        const id = tournament.id;
        const round_id = event.currentTarget.getAttribute('data-id');
    
        try {
            const res = await fetch('/tournaments/rounds/delete', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id, round_id })
            });
    
            const data = await res.json();
    
            if (!res.ok) {
                alert(data.error);
            } else {
                window.location.reload();
            }
        } catch (err) {
            console.error(err);
            alert('Something went wrong.');
        }
    }
    
    
    document.getElementById('finishTournamentForm').addEventListener('submit', async function(e) {
        e.preventDefault();
    
        saveAllRounds();
        
        const id = document.getElementById("finishTournamentId").value;
    
        try {
            const res = await fetch('/tournaments/finish', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id })
            });
    
            const data = await res.json();
    
            if (!res.ok) {
                alert(data.error);
            } else {
                closeModal();
                alert("Tournament finished succesfully.");
                window.location.reload();
            }
        } catch (err) {
            console.error(err);
            alert('Something went wrong.');
        }
    });
</script>


<%- include('components/footer') %>